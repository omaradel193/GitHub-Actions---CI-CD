name: Terraform Infra & K8s Apply

on:
  workflow_run:
    workflows: ["EKS Terraform K8s Deploy"]
    types:
      - completed

jobs:
  terraform:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          aws --version

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.29.0'

      - name: Download EKS outputs artifact
        uses: actions/download-artifact@v4
        with:
          name: eks-outputs

      - name: Load EKS outputs into environment variables
        run: |
          echo "vpc_id=$(cat vpc_id.txt)" >> $GITHUB_ENV
          echo "public_subnet_id=$(cat public_subnet_id.txt)" >> $GITHUB_ENV
          echo "private_subnet_id=$(cat private_subnet_id.txt)" >> $GITHUB_ENV
          echo "sg_id=$(cat sg_id.txt)" >> $GITHUB_ENV

      - name: Decode SSH private key
        run: |
          echo "${{ secrets.EC2_SSH_KEY_B64 }}" | base64 -d > my-ec2-key.pem
          chmod 600 my-ec2-key.pem

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init and Apply
        working-directory: terraform
        run: |
          terraform init
          terraform apply -auto-approve \
            -var="vpc-id=${{ env.vpc_id }}" \
            -var="public_subnet_id=${{ env.public_subnet_id }}" \
            -var="private_subnet_id=${{ env.private_subnet_id }}" \
            -var="eks_worker_sg_id=${{ env.sg_id }}" \
            -var="key_name=my-ec2-key"

      - name: Configure kubeconfig
        run: aws eks update-kubeconfig --name mycluster --region $AWS_REGION

      - name: Apply Kubernetes resources
        run: kubectl apply -f kubernetes/k8s.yaml

      - name: Get Kubernetes services
        run: kubectl get svc
